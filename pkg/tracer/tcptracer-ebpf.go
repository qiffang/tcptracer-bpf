// Code generated by go-bindata.
// sources:
// ../dist/tcptracer-ebpf.o
// DO NOT EDIT!

package tracer

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _tcptracerEbpfO = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5c\x61\x6c\x1c\xc7\x75\x9e\xbd\xe3\x89\x47\x2a\x0a\xe5\x38\x67\x53\xe7\xb8\xa1\x1d\x25\x62\x09\x57\x26\x25\x8a\x3a\xd1\xb6\x42\xcb\x91\xcd\xb2\x6a\x49\x2b\x3a\xfb\xaa\xd6\x38\x9d\x4f\x47\xf1\x44\x4a\x3a\xf1\x4e\x32\x97\x14\x52\xd6\xb1\x0d\x81\x30\x0a\x2a\x76\x5b\xc2\x10\x0c\x1e\x45\x5b\x4c\x90\x16\x6a\x90\x46\x2c\x2a\x84\xaa\x6a\x04\xfc\x91\x00\x82\xeb\x04\x84\xab\x02\xfc\xe1\x06\xac\x61\x14\x6a\x20\xa8\x6c\x20\xe8\x8a\x9b\xf7\xed\xed\xee\xdb\xd9\xbd\xa3\xa4\xa4\x3f\xca\x03\x92\xd1\xfb\x76\xde\xbc\x99\x37\x6f\xde\x7c\x33\xbb\xf4\x9f\xed\xde\xf3\xac\x4f\xd3\x84\xf1\xd3\xc4\x7f\x0b\x53\x32\x7f\x91\xa8\xf9\xef\x0e\xfc\x7f\xa3\xd0\xc4\xdc\x03\x84\xbd\x2e\x84\xf8\xbc\x10\x62\xa4\xf6\x7a\xa1\x28\xeb\x89\x8c\xc4\x47\xc2\xcb\x52\x9e\x9b\xa2\x7a\xd5\x3e\x21\xae\x17\x0a\x85\xb9\x73\x90\xfd\x42\x2c\x17\x0a\x85\x7a\x66\xf4\x62\x95\xd9\xae\xaf\x28\x03\xff\x4b\x94\xfa\x83\x3d\xcc\x6e\xa7\xb4\x73\x11\xed\x8c\x84\x3b\x1c\x76\x3b\x15\x76\x5e\x97\x63\x16\x22\x24\x3e\x2f\x9f\xe8\x6b\x08\xaf\x44\xcf\x2f\x84\x38\x54\x2d\x44\x83\x10\xe2\x15\x94\xd1\xea\x80\xc6\xf5\x3b\x3c\xec\xce\x55\x93\x1c\xaa\xbe\x4d\xe3\x3a\x0e\x59\xbb\x45\x72\x1e\xe3\xf2\x61\x5c\x4d\xcd\xe4\xdf\x2c\xea\xf9\x9f\x97\xfd\x88\xfa\x6f\xca\xf6\xf4\xc1\xa0\xc4\x5f\xfa\xc2\x0d\xf2\x63\x0d\xf4\xde\x59\x2a\x50\xb9\x88\x72\x01\xe5\x55\x94\xf3\x28\x2f\xa3\x9c\x45\x79\x01\xe5\x0c\xca\x49\x94\x13\x28\xc7\x51\x9e\x46\x39\x8a\x72\xa8\xd4\x6f\x9f\xec\x77\x1f\xe1\xe1\x0c\xf5\xff\xf8\x7a\xcc\x13\xd5\xd3\x07\xeb\x31\xbe\x46\xaa\xd7\x34\x0a\xbc\x01\x78\x03\x70\xb2\xa3\x67\x1a\x09\xaf\x25\xfb\xfa\x89\x66\x92\xf7\x53\xbf\xf4\x5c\x84\xfc\x37\x44\xd1\x3a\x32\x86\xfe\x77\x51\xff\xf5\xa1\x4e\x7a\x3e\xd8\x83\xf6\x31\xde\xb1\x0b\x36\x3f\x24\x06\x73\xf2\x79\xb2\xe9\x1a\xe4\x21\xc8\xe4\xc7\xf4\xe0\x29\x29\xf7\x37\x7d\x02\xf9\x5b\x90\x7f\x89\xfa\x19\xd4\x5f\xc0\xf3\x51\x3c\x5f\xc2\xf3\x83\x52\x3e\xe4\xa3\xf8\x49\xe8\x07\xa4\xdc\xfd\x1d\x9a\xb7\x84\xde\x47\x65\x76\x80\xea\xf9\xa9\x5e\xf7\x5b\x98\xd7\x76\xcc\x5f\x13\xcd\x5f\x4a\x4b\x48\x7f\x87\xb4\x53\x88\xa3\xef\x50\x7c\x6b\x9a\xc4\x03\xe2\xef\x28\x2e\x10\x8f\xfd\xe1\xbd\x52\xaf\xee\x0d\x92\xe7\xf2\x54\x56\x6b\x42\xec\x2d\x14\x0a\xc6\xfc\xcd\x25\xcd\xb8\x2d\x2e\xcd\x74\x9e\xf4\xfa\xc3\x34\x8e\x80\x78\x17\xe3\x8c\x15\xa8\xbc\x45\xcf\x9b\xf6\xa1\xbc\x89\x7e\xf6\xe1\xf9\x32\xe2\x80\xe6\xdd\x68\xbf\xee\x7e\x67\x3f\x62\xe8\x47\x95\xc5\xbe\x7e\xbc\xa1\xac\xde\x2d\xa5\x5e\x63\x59\xbd\x7d\x96\x71\x9b\x7a\xcd\x65\xf5\x6e\x2a\xf5\x28\x0e\xeb\x1e\x70\xd6\xef\x43\xfd\xa0\xc2\xbf\xfa\x71\x8a\x5b\xfd\x1c\xf9\x4b\x65\x6f\x59\x31\xbe\xc4\x34\xfc\xdf\x45\x79\x22\x71\x8e\xe6\x21\xd9\xde\x4a\xf1\x37\x65\xcc\x47\x84\xe4\xfc\x4d\xcc\x63\x3b\xd5\x7f\x8f\xe6\x25\xb9\xff\x49\x59\x86\xaa\xfa\x6d\x71\xf7\x0a\xca\x90\x9f\xe2\xf2\x45\x9f\x10\x85\x82\x10\x21\x5f\x2f\xc9\x1a\x64\x8d\xe2\xda\xc8\x5f\x23\xe1\x3e\x96\x9f\x87\x6c\xf9\xc0\x3a\xae\x0c\xc6\xb5\x1e\xe3\x5a\xcf\xf2\x69\x33\xdb\x3f\xfa\x14\xf9\x35\x20\xf6\xca\x32\xa4\x6d\x92\xf9\x31\xa4\x3d\x25\xfd\x53\x5c\x07\x01\xf9\x9c\xd6\xbd\xd1\x9f\x64\x78\x1f\xfa\x43\xfe\xab\x7b\xd6\x3d\x0e\xbd\xe7\x2b\xe6\x3a\x5f\xfb\x14\xf3\x75\x48\xc0\xaf\x28\x8b\xe3\xf8\x55\xa1\x50\x30\xc6\xf1\xd2\xfa\x96\x52\x3f\x35\xd9\xbf\xcb\x58\x6f\xcd\xac\xff\x34\xcf\x7a\x9e\xf2\xa7\x2a\xde\xac\xeb\x81\xf7\x3f\x91\x47\x9c\x84\xaf\xa1\xfd\x8d\xb6\xf6\xfb\xc3\x14\x27\x75\x6b\x9c\xed\xde\xf4\xcc\x13\x46\x7c\x7d\x82\x76\x37\xb0\x7e\x23\x0f\xe4\x1b\x5c\xfb\xbd\xec\xd9\x6f\xc4\x6b\x78\x11\xed\xaf\x63\xfd\xee\xa5\x76\x5f\x70\xb6\xdb\xeb\xd9\xef\x5e\xf4\xfb\x97\x68\x97\x36\xe0\x44\x7e\x1f\xec\x2d\x38\xf8\x45\x25\x71\x59\x8e\xd7\xfc\x9f\xf1\xa9\x7a\xce\xa7\x7a\xd8\x7a\xed\x74\xd8\xed\xf1\xe2\x35\x88\x93\xd0\x1a\x0a\xe5\x4a\xf4\x8a\xeb\x54\xef\x15\x8e\xfa\x5e\xbc\xcd\xe4\x4f\xbf\xa2\x71\x94\xf8\xd3\x75\x92\xa7\xf8\x38\x1a\x0a\xf6\x7a\x51\xe2\x4f\xda\xa7\xc4\x9f\x8e\x83\x3f\x3d\xb2\x24\xec\x7a\xe0\x4b\x61\xec\xb7\x61\xf0\x25\xac\xc7\x91\x30\xf8\x43\x18\xfc\x21\x0c\xbe\x11\x06\x5f\x0a\x83\x2f\x85\xc1\x97\xc2\xe0\x4b\x61\xf0\x25\x96\x0f\x4b\xf9\xd2\x0f\xfe\xd4\x1e\xc3\xfe\x79\x00\xbc\x88\xf8\x93\x9e\x05\x6f\x6a\xcf\xd8\xf6\x57\x3d\x4b\xfb\xa3\x9e\x03\x4f\xea\x82\x9d\x76\xf0\xad\x6c\x33\x9e\x47\xf0\x1c\xfd\x6a\x07\xbf\xca\x22\x9f\xe5\x3a\xf1\x1c\xe3\x68\x07\xbf\xca\x82\x37\xb5\xcf\xd8\xc6\x9d\xc8\x81\x2f\x75\xfd\x14\x32\xf8\x52\x17\xf9\x2d\x9d\x03\x5f\xea\xfa\x08\x32\xf8\x52\xd7\x2f\x50\x1f\x7c\xa9\x6b\x1e\xcf\xc1\x97\xba\x16\xf0\x1c\x3c\xa8\x0a\x7c\xe9\x04\xed\x43\xdd\xfb\x30\x4f\x5d\xe0\x6d\x39\xe2\x51\x89\x13\xe0\x57\x01\xf0\xa6\xdd\xa8\xb7\xdf\x98\xaf\x08\x4a\xda\x2f\xa3\xbe\xef\x8a\x62\xe8\xce\x9d\x47\xfc\x55\x0b\x31\x5b\x28\x14\xea\xda\x10\x97\x96\xfc\xd1\x6c\xd9\xa7\x1c\xfb\x41\x1e\xed\x3e\x48\xf1\xa4\xe7\x9b\x21\xa3\x1d\x4b\x7c\x37\xb0\xf5\x1b\x53\xee\x67\x6f\xd3\x38\x82\xd8\x2f\x50\x46\x83\x6f\xb1\x38\x85\x1d\xc4\xf9\x48\xf8\x3a\xca\x25\xe4\xb3\x5f\xa3\x5c\x06\xbe\x88\x7c\x86\xfd\xe3\x38\xcd\x2b\xe7\x39\xc5\x7e\xad\x77\x19\x7f\xd0\xb6\x0f\xba\xeb\xd7\x33\xfd\x86\x15\xe8\x5b\xf5\xae\xaf\xd0\x6e\x90\xe9\x2f\x29\xf5\xcb\xf3\xc2\x5f\xdf\x21\x2f\x5c\x5e\x21\x2f\x5c\xac\x88\x67\x2c\xba\xf2\x0c\x25\xef\xfd\x2e\xe2\xe2\x1d\xca\x23\xfa\xfb\x88\x8f\xc3\x94\x4f\xe6\x12\xa4\xdf\x7d\x86\x4a\xfd\x3c\xe2\x66\x18\xf9\x64\x06\xe7\xc7\x31\xca\x33\xe9\x69\xc4\x51\xd7\x10\x78\xe5\x32\x78\xe5\x30\xe3\x9d\xa7\x88\x47\x6a\x3b\xa9\x9f\x7f\x0e\x3b\xa5\xfc\xfb\x04\xe1\x4f\x93\x6c\xf2\x47\xf2\xcf\xdc\x23\x1c\xdf\x26\xe5\x91\xae\x20\xf2\xd1\x7a\xe4\xbd\x7a\x96\xe7\x3b\x6c\xeb\x5b\xcf\xf7\xd8\xd6\xb9\xd5\x5f\x11\x05\xdf\x8c\xd6\xd0\x06\x66\xf8\xe5\x90\x86\x75\x87\xb2\x5e\xd2\x01\x93\xa7\x3d\xfc\x08\x6d\x44\xd1\xea\x0d\xb6\x71\x96\xd3\x7b\xe9\x11\x9a\xc0\x57\xd6\xd0\xf3\xe4\x61\x9a\x17\x63\x7d\x27\xc7\x36\xa2\xff\x34\xde\x6b\x1a\xf5\xaf\x3f\xdc\x08\xbc\x9e\xe1\x4d\xc0\xd7\x63\x5d\x3f\xe6\xd8\xb7\x79\xbe\x69\x56\xe6\x1b\x8c\xdf\xa2\x17\xab\x40\x6f\x25\xfc\x26\x28\x79\x46\x84\xcd\x1b\xe5\x79\xfd\x10\xe5\x75\xbd\x2f\xe3\xe8\xc7\x82\x17\x1f\xc0\x7d\x47\xa8\xe6\x61\xd2\x47\x3c\x47\xb5\x87\xe4\x3e\x3f\x77\x5c\x3d\x2f\xc5\x73\x41\xb5\xac\xf7\x80\x6c\x87\xc7\x51\x3f\xf6\xb7\x4a\xef\x75\x42\xe0\x8b\x3a\x9e\x87\xb4\x75\xd2\xfe\xbd\x6f\x77\x8c\xda\x65\x7e\xd6\x35\xda\xb7\xe7\xbe\x4d\xb2\x2a\x4f\x5c\x50\xe4\xa5\x74\x9e\xfa\x13\xd5\x3e\x2d\xf8\x6c\x3c\xfd\x02\xe2\xe9\x3a\xfa\xbd\x88\xf2\x56\xc1\x3a\x9e\x24\xf6\x19\xfd\x4c\x7d\xc5\xf6\x6d\x79\xea\x4c\x43\x59\xbd\xeb\x4a\xbd\xc6\xb2\x7a\x8b\xaa\x3c\x7c\xa6\xb9\xac\xde\x2d\xa5\x1e\xf2\x77\xbd\xb3\x7e\x87\x35\x7f\x7f\xdb\x9c\x3f\xd2\x33\xf2\x77\x87\x6b\xfe\x5e\x52\x9e\xeb\xe1\xff\xae\x09\xe4\xd7\xeb\xc8\xaf\x67\x91\x7f\x31\x1f\x4d\xc4\xd3\xd2\x38\xcf\xf5\x87\xa7\xa8\xfe\x7b\x34\x2f\xc9\xfd\xd3\x94\x8f\xab\xfe\x41\x96\xce\x73\xfd\x8f\x24\x6e\x9e\xeb\x7f\x48\x72\x29\xff\xfe\x80\xf4\x1c\xf7\x9e\xb4\x7e\x02\x62\x8b\xe0\xf1\x3c\xe1\x19\xcf\xc4\x1f\x2f\x82\xc7\x8f\x0c\x83\x4f\x0f\x83\x9f\x0d\x5f\x70\xe4\x6b\x23\x6e\x24\x9f\xf0\xdb\xfd\xfb\xba\xec\x43\x31\xaf\x90\x7f\xf5\x73\x11\xe5\x38\x47\xda\xcd\xfb\x62\x4d\xc6\x2d\xed\x0f\x89\xfc\x0f\x11\xc7\xfb\x20\x4f\x40\xee\x83\x7c\x16\xf2\x00\xfc\x3c\xc9\xf2\x2f\xf6\xc7\xfc\x14\xc3\x07\xa1\x3f\x0d\xfd\x1c\x95\xc3\x43\x28\x4f\x21\x6f\x1b\xe7\x09\xf0\xfc\xbc\xc1\x53\x69\xdf\x9e\x9b\x86\x1f\xaa\x28\xce\x8c\xfd\xa9\xde\x67\xf7\xef\xc5\x00\xdd\xd3\x17\xfd\xb1\xa1\xc2\xf9\xf0\x4b\xdf\x9d\x24\xbb\x77\x9d\x3f\x8e\x14\x6a\x95\xfb\xf1\xc4\x9d\xf1\xd2\x33\x3d\xca\xfe\xa8\x78\x69\x87\x8a\xdf\x79\xe8\x73\x5e\x3a\xb1\x02\xfd\xb2\xbc\xd4\xc3\x6e\x45\xbc\xb4\x82\xbc\xa6\xe4\xa5\x15\xe4\x35\x25\x2f\xf5\xc8\x6b\x8b\x15\xe5\xb5\x15\xf2\xd2\x7c\x87\xed\xfc\xa8\xbf\x87\xf8\xc0\xf9\xac\x3b\x24\xd0\x2e\xe2\xa5\x9d\xd6\x87\x3e\x0d\x3e\x6a\x9c\x13\xa7\x10\x3f\x4d\x38\x67\xe2\x5e\xa8\x3f\xfc\x21\xad\xbb\x49\xf0\xd1\x5a\x3a\x77\x86\x02\x1b\xa8\xfd\x56\x6a\x3f\x54\xf5\x20\xcb\x7b\x21\x96\xf7\xee\x77\xc9\x7b\x6b\x64\xde\xb3\xae\xaf\x0b\x9e\xeb\xab\xd6\xb1\xdf\xbb\xd5\xa7\xfc\x58\xc5\xf2\x23\xce\xdb\xc3\x38\x8f\x0f\x4f\x38\xf2\xe3\xc4\x6f\x34\x3f\x9e\xb5\xe5\x47\x1d\xeb\x5d\x9f\x42\x9e\x6a\xb2\xdf\x5f\x18\xf9\x4c\x9f\xc2\x7d\x49\x93\xfd\xbe\x23\x9d\xbf\xca\xf2\xe4\x69\xe0\x1f\x32\x7c\x0c\xf6\x3f\x82\xfd\x37\x91\x37\xc7\x51\xbe\x0d\x7b\x33\x2c\x7f\x4e\xde\x71\xfe\x8c\x59\xf2\x67\x40\xfc\x33\xe9\x83\xbf\x72\xbe\x6a\xde\x9b\x35\x97\x64\xb9\x4e\x82\x88\xdf\xf4\x0a\x79\x6c\xe9\x5e\xeb\x31\xd2\x07\x6f\x8d\x6a\x4d\x32\x8e\x46\x0e\x13\xff\x9f\xc3\x7b\x9b\x8b\xb0\x33\x32\x46\x7e\x4e\x8e\x91\x9f\x8c\x73\xe6\x1c\xde\x17\xa9\xd6\xe5\xbc\xf2\x3c\x6c\xac\xe7\x79\xd7\xf5\xfc\x91\x62\x3d\x8f\x8c\x51\x3c\xf5\x8f\x4d\x3a\xe2\x3c\xb2\x22\x5e\x5b\x47\x7c\xbd\x0f\xfe\x7b\xbf\x91\x9d\x13\x60\x27\x7c\xb7\x76\xbe\xe9\xcd\x9f\x3d\xfc\x36\xa9\xdc\xff\xd0\x1f\xd6\xef\xa8\xb6\xc4\xf8\xf4\x78\x19\x3e\x1d\xb1\xf3\x69\xe3\x3d\x99\x47\x7f\xc6\xbd\xde\x93\x79\xe8\x29\xf9\xb4\x71\x1f\xe2\xa1\xa7\xe4\xd3\xc6\x7d\x88\x87\x9e\x92\x4f\x1b\xf7\x21\x1b\x9c\xf5\x23\xd6\x7d\xe7\x2d\x73\x3e\xed\x71\x1a\x59\x21\x9f\x86\xff\x71\xaf\x69\xf2\xe9\x69\xc6\xa7\x67\x18\x9f\xfe\x1e\xe3\xd3\xdf\x07\x9f\xa6\x05\xeb\xe4\xd3\x74\x20\x36\xf7\x15\x8a\x3f\x63\x5f\x89\x6a\x57\xa8\xbf\x96\xf8\x2d\xc6\x55\x40\xfc\xfd\x3d\x89\xc3\xa8\x36\xcd\x78\x98\x71\xdf\x39\x7e\x67\x3c\xcc\xb8\x67\x63\xfd\x51\xf1\xb0\x88\xd7\x3d\x9d\x42\x9f\xf3\xb0\xf1\x15\xe8\x57\x7c\x3f\xa8\xb0\xbb\xa2\xfb\x41\x0f\xbb\x9e\xf7\x83\x1e\x7a\x9e\xf7\x83\x8a\xf5\xb0\x58\xd1\x7a\x58\x21\x0f\x9b\x46\x5c\x18\xdf\x47\x9c\x33\xde\x07\xcc\x60\xff\x46\x9c\x34\x61\xbf\xcf\x83\x7f\xe1\xbd\x47\x7a\x12\x71\x53\x4b\xfb\x7d\x1a\xef\x91\xfb\xf7\x5f\xa1\xf5\x72\x1e\xfc\x6b\xf8\x03\xca\x8f\xdb\xa9\x3f\xdd\xcf\x51\x19\xaa\xfe\x13\xea\x27\xee\xc7\xbb\x37\x19\x78\x4c\x96\x2f\xe2\xd6\x2c\x24\xe8\x45\xde\x8b\x01\xc8\x01\xba\xf8\x8f\x56\x05\x64\xc9\xd7\x5f\xbd\x5c\x7e\x96\x7b\xba\x67\xe8\x5e\x2b\xea\x1b\xa1\xfa\x65\xef\xe7\x4e\x96\xfc\x1b\xb0\xdc\x57\xf1\x7b\xf8\x91\xb1\x8e\xd2\xfe\xe4\x97\xeb\xa5\x13\x7e\x22\x3e\x60\xb4\x9f\x0c\xef\x61\xfb\x18\xde\xeb\x18\xfc\x6a\x8a\xf2\x49\x12\xef\x79\x12\x53\x97\x20\x1f\x44\x5e\x22\xff\x5e\xc3\x7d\x65\x3f\xde\xf7\xa4\xa7\xae\x30\xfc\x30\xf4\x3f\x80\xfe\x00\xd6\x71\x06\x65\xce\xc1\x1b\x7b\x14\xf7\xa0\xe9\xfc\x61\xb4\x8f\xf3\xef\x39\xea\x47\x62\xfa\x00\xf2\x1e\x11\xa2\x39\xba\x96\x2d\xbd\x67\x79\x05\x65\x28\xf0\x05\x7a\xfe\x55\xc1\xe6\xad\x8e\xf0\x10\xc7\x3f\x47\xb8\x85\xa7\x45\x3c\x78\x9a\x71\x0e\xe1\xe7\xdd\x72\xfd\x4e\xe2\x7d\x57\xb2\xfd\x6d\xe6\xb7\x09\xc6\x3b\xdf\x01\xef\x34\xfc\x77\xd6\xc1\x37\xc6\x3d\xf9\xfe\x8d\xdb\xbc\xfe\xa4\x67\xfd\xff\xbc\xfd\xdb\x8d\xb7\x49\x16\x6f\xd3\x2c\xde\x66\x5c\xe2\xed\x7b\x2e\xf1\xf6\xfd\xbb\x8a\xb7\xbb\x9d\xf7\x80\xf8\xc9\x6f\xd5\x7f\xfa\x94\x91\x2f\x71\xee\x68\xc7\x77\x6e\xc6\x7b\xda\x29\xe4\xcb\x73\x38\x1f\xe1\xfd\xab\x71\x4e\x72\xae\xe7\x51\x97\xf5\xfc\x2a\x5b\xcf\xaf\xc1\xaf\xa7\x51\xbe\xf9\x1b\xf3\x6f\x4c\xfa\xf2\x5f\xc8\x0f\xa5\xef\x10\x0d\x7e\x00\xbf\x6d\xb0\x7f\x3f\x60\xbc\xff\xe7\xe7\xa0\x50\x0d\xbd\xe8\xb1\xae\x07\xd5\xf7\x0a\xce\x73\x50\xbb\x2c\xcd\x73\x50\x84\xce\x41\xc6\x3c\xa2\xfd\xfe\x31\x7c\x6f\x32\x76\x03\x7c\xa5\xfc\xfe\x7b\x63\x05\xfb\x76\x35\xde\xc7\x97\xfb\xee\x6b\x64\x0c\xfc\x70\x0c\xdf\x6f\x54\x70\x0e\x53\xf3\x0e\x63\x3f\x5f\x72\xdd\xcf\x55\xfc\x7d\x64\x6c\x1c\x7e\xe8\xa9\x38\x5f\x55\xf6\xde\x02\xed\x86\xef\xb6\xdd\xdf\xbf\xe3\x73\x97\x8c\xeb\x20\xde\x2f\x39\x78\x6f\x0f\x78\xef\x7f\x14\x7c\xb6\x3c\x80\xef\x44\x71\xdf\xc4\xf7\x7d\x7e\x3f\x99\xc4\xf9\xd5\x3c\xaf\x79\x7f\xe7\x91\x00\x3f\x4a\x36\x61\x7d\xe2\xfb\x90\x64\x98\xbe\x83\x30\xdf\xef\x4d\x23\x1e\xca\x9f\xe7\x66\x3d\xce\x73\x2a\x5e\x78\xc9\xfa\x9d\x14\xe3\x85\xe6\x77\x58\xe0\x67\xf9\x1b\x6c\x9f\xbb\xe2\xc8\x1f\x33\x8a\xfc\x91\xc0\x7d\x74\x48\x9b\xc7\xbe\x78\x49\xe9\xcf\x90\xf6\x01\xec\x90\x3d\xf3\x1e\xed\x9f\x80\x5f\x61\xf8\x8f\xc9\xbe\x25\x3f\x15\xe3\xc9\xf8\x7e\x90\xe7\x27\xe3\xfd\x49\x40\xbc\x71\x8f\xe3\xe6\x6f\xe4\x79\xe9\xde\xc5\xcd\x9d\x7d\x37\x64\xc6\xd3\x35\xc4\x91\x71\x0e\xfb\xc4\x25\x9e\xca\x9f\x8b\xd4\xf7\x3c\x95\x9f\x8b\xae\xae\x50\x9f\x9f\x07\x67\x3d\xf4\x8d\x78\xae\xae\x71\x9e\x03\x2f\x7b\x9c\x77\xcc\xb8\x5e\x70\x89\xeb\x8f\x2b\x8a\x6b\xf3\x9e\x92\xe6\x23\xea\xc3\xfb\x6f\x8c\xa7\xfc\xb9\xa2\x06\x71\x49\xf3\xac\x4f\xd3\x3c\x47\xab\x88\x18\xbb\xf1\x63\xca\x02\x96\xf3\x46\xe0\xf1\xd2\xf8\x28\xfe\xc0\x33\xce\x23\xce\x86\x63\xa5\xf8\xf2\xc9\x78\x00\x9f\x3d\x7c\x90\xf1\x14\xfb\x3d\xac\xc9\x1b\x86\x20\xe3\x1e\xb5\xe9\x14\xf8\x06\xf9\xcf\xe4\x1f\x1f\x43\x7e\x95\xc5\x63\x79\xde\xd1\xa7\xcc\x1b\x43\xc8\x1b\x4f\x23\x6f\x9c\x72\xc9\x1b\x4f\x61\x1e\x47\x59\x7e\x68\x07\xfe\x2a\xc3\xb7\x3b\xf2\x46\x8f\x47\xde\x98\xc3\xdf\x4d\x38\x79\xe3\x66\x59\xbf\x1b\xdf\x9b\x84\x34\xfa\x6e\xa2\xfb\x19\xc8\xfe\x26\xd8\x5f\x60\xf6\x37\x01\xff\x98\xe1\x1b\xef\x28\x9f\x99\x7c\xeb\x33\xd2\x77\x7c\x0f\x4a\xbc\xcb\xf8\x5e\x38\x59\x0b\x9e\x53\xfa\x3e\x74\xc9\xb1\x2f\xdf\xf0\xdc\x97\x6b\xa5\x9c\x28\xed\xcb\x44\xa4\x38\x3f\xb3\x7e\xf7\xb1\x74\x4f\xbe\x6b\x75\x7e\xc7\x5a\x19\x0f\xdc\xa8\xec\x9f\xdb\x79\x8a\xf3\x4f\x73\x5d\xd1\x3a\x77\x9e\x0b\x2e\x97\xd6\x51\x95\x65\x1f\x37\xd7\x95\xfd\xbe\xcc\xb8\x1f\xe3\xdf\x87\x9a\xdf\x53\xe3\x3b\x48\xf0\x56\xe3\xbe\x57\x95\x57\xdd\x78\xfa\xec\x1d\x9c\x83\x1c\xfe\xdf\xa4\x9e\x07\xc3\x2f\x69\xfc\x3d\x4e\x54\x0b\x97\xf6\xc5\xa0\xc5\xef\xe6\xf8\x0d\xde\x4f\xe3\x30\xbf\x53\xa2\x78\x35\xfd\x4b\xfe\xe0\xef\xcb\x46\x86\x17\x4b\xfe\x0c\x58\xee\xb7\x55\x7c\xd6\xcd\x1f\x0b\x5e\xfe\xb0\xac\xef\x46\x0f\x7f\x54\x59\xfe\x27\xaa\xc4\xea\x0f\xbf\x55\xbf\xa8\x7f\x6b\x0c\x77\x74\x08\xe5\xdf\x47\xfe\x7f\xfd\xad\xc6\x8b\xfa\xb7\xea\x17\xf5\x4f\xc3\xbe\x22\xb7\x9d\x55\xbf\x94\x7e\xab\x7e\x51\xff\x34\xec\xff\xf2\x9c\xb4\xea\x97\xd2\xaf\xe8\x97\xc6\x55\xbf\x38\x7e\xc6\x3a\x5a\xcd\xbb\xf6\x9f\xb6\xba\x1f\x29\x7f\x46\xbc\x9c\x16\xab\xbc\xce\xfa\x7b\xae\x67\x8f\xb8\x5d\x28\x14\xd6\x43\xd6\x86\xf7\x8a\xe0\xa9\xb5\xda\x43\xd6\x7c\x2c\x84\x18\x42\x59\xc4\x1e\xc3\xbf\x17\x82\x26\xd6\xa1\xa8\x87\x3f\xd5\x13\x7d\x96\x7a\xf8\x5c\x4a\x5c\xae\x35\xb1\x53\x46\x67\xd6\x99\xd8\x38\xa0\x4c\x8d\x89\xe1\x68\x28\xe6\x2d\x36\x66\xf1\xef\x51\x4c\xea\x17\x85\x10\x3f\x35\x9e\x57\x30\xd1\xaf\xc9\x35\x12\x10\x8d\x6b\xec\xf8\x83\xc0\x83\xd5\x76\xfc\xaf\xfc\x84\x5f\x66\x78\x0c\x78\x87\xdf\x8e\xff\x9b\x8f\xf0\x3e\x56\xff\xc7\xc0\x1b\x82\x76\xfc\x34\xf0\x4e\xd6\x9f\x1c\xfa\x33\xc4\xea\xef\x03\x7e\x9a\xe1\x9b\x81\x4f\xb0\xfe\xbc\x8b\xf6\x67\x59\xfd\x0c\xf0\x79\x86\xff\x85\xd4\xaf\x11\x9d\xac\xff\x3f\xf7\x11\x3e\xca\xf0\x1f\x01\xaf\x67\xed\x8c\x02\xef\x64\xf8\xdb\x55\x84\xc7\x18\xfe\xd7\xa8\x3f\xc3\xfa\x5f\x27\xeb\xaf\x15\x4b\x0c\xef\xf1\x13\x3e\x14\xb0\xe3\x7f\xeb\x23\x3c\xc6\x62\x61\x08\xf8\x0c\xab\x7f\x12\xed\x2c\xb0\xfe\x74\x00\x0f\xd6\xd8\xf1\x65\xe0\x33\x76\x58\xfc\x2e\x70\x9e\x6c\x7e\x02\xbb\x7d\x0c\x3f\x25\xc7\xb5\x4e\xc4\x58\xce\xfe\x53\xe0\xf5\xb5\x76\xbc\x0d\x78\x1f\xc3\xdf\xf0\x13\xbe\xc0\xda\xef\x04\x9e\x61\xed\x0f\xa0\x9d\x08\x6b\xa7\x1a\xf8\x3c\x9b\xdf\x08\xda\x59\x66\xf8\x41\xa3\x3e\xf3\xcf\x1e\xe0\x33\x6b\xed\xf8\xd7\x80\x4f\x30\xbc\xe0\xd2\xff\xff\x32\xfa\xcf\xf0\x43\xc0\x47\x19\xfe\x28\xf0\x25\x86\x7f\x4b\xe2\x75\x62\x82\xf9\xe1\x7d\x1f\xe1\x0d\x6c\x5c\x6f\x56\x11\xce\xd7\xef\x51\xb4\xc3\xd7\x4b\x33\xf0\xab\x0c\xff\x19\xda\x5f\x64\xf8\x01\xd4\x5f\x66\xfd\x1c\x47\xfd\x1e\x76\xef\x95\x06\x7e\x80\xe1\x5f\x96\xfd\xbc\xaf\x94\x0f\x8d\xdf\x6e\x89\xdf\xef\xf0\xdb\x4e\x89\x87\x94\x9b\xa1\x5f\xf8\x9d\xa0\xc4\x03\x2e\x78\xb5\x0b\x5e\xe3\x82\xaf\x75\xc1\xd7\xb9\xe0\x75\x2e\xf8\x7d\x2e\xf8\xfd\x2e\x78\xc8\x81\xed\x92\xf7\x8f\x5f\x71\xe0\xc7\xe5\x7b\xa5\x8d\x0e\xfc\xb0\xc4\x37\x38\xf0\x8b\xf2\x3d\xd8\x97\x1c\xf8\x6d\xd9\xfe\xc3\x0e\xfc\x05\xd9\xce\x23\x0e\x7c\xb7\xdc\xd7\x1a\x1c\xf8\xb8\xac\xef\x1c\xef\x43\xb2\x7d\xa7\xdf\x3e\x93\xf5\x9d\x7e\xfe\xb9\x6c\xdf\x39\xbf\x47\x24\xee\x9c\xc7\x61\xd9\x8e\xd3\x9f\xd5\xb2\xbe\x73\x5e\xfe\x51\xe2\xce\x38\xf9\xa6\xc4\x9d\xf1\x70\x4e\xfa\xed\x41\x07\xfe\xa9\x1c\xd7\x43\x0e\x7c\x51\xf6\xc7\x39\x8f\x3b\x25\x1e\x76\xd6\x97\xed\xd7\x3b\xf0\x46\x59\xff\x51\x07\xfe\x33\x59\xff\x77\x1c\xf8\x17\x25\xfe\x65\x07\xde\x89\xb2\xb8\x8c\xbe\x51\xcc\x8f\x4c\xce\x30\xf9\x82\x45\x7e\xa1\xe8\x93\x35\xa6\xfc\xa2\x10\x62\x26\x68\x7f\x6e\x6d\x7f\x37\x6b\x7f\x37\x6b\xbf\x28\x4f\xb2\xf6\xc7\xfd\x76\x59\x04\xed\xf6\x22\x16\x39\xc6\xec\x15\xeb\x5f\x65\x72\xa3\x66\x97\x97\xfd\xf6\xf6\x62\x01\x53\x7e\xbe\xc8\x67\x02\xf6\xe7\x4b\xcc\x5e\x7d\x8d\x5d\x9e\xa8\x35\xe5\xbd\xc5\x7d\x9d\xd9\xef\x60\xf6\x67\x98\x3c\x5a\x63\xb7\x5f\x5f\x6b\xb7\xdf\x59\x6b\xb7\x37\xb4\xd6\x5e\x7f\xe1\x73\x76\xfb\x31\x66\x7f\x9e\xd9\x6b\xf0\xd9\xe5\xa1\x2a\x7b\x7b\x17\x82\x76\xb9\xb3\xc6\xde\xbe\xd5\xdf\xcf\x16\xc7\x6f\x91\x9f\xc3\xd9\xdf\x2a\x1f\x60\x72\xa7\xc6\xfa\x6f\x79\x1e\x15\xa2\x94\x91\x8a\xc3\xde\x5e\xdc\x9f\x2c\x72\x04\x31\x69\xc8\x3b\x2c\xe3\x2d\xca\xed\x45\x7e\x60\x91\x9f\x28\xfa\xd7\x22\x3f\x59\xe4\x6f\x16\xf9\xa9\xe2\x7c\x58\xe4\x9d\x42\x88\x4b\x16\xf9\xeb\x96\x78\xaa\x35\xce\x0c\x9b\x73\xa9\xa1\x9c\xe8\x1f\x4c\xe5\x32\x83\xc7\x5e\x4e\xc5\xe3\xe9\xa3\xa9\x5c\x3c\x99\xed\x8f\x27\x92\xc9\x54\x26\x27\x36\x0f\xa6\x06\x4a\x8f\x1f\xe7\x4f\x8f\x24\x32\xd9\xc7\x7b\x0f\xa6\x8f\x66\x73\x89\x81\x81\xf8\x60\xca\xd6\x56\x2e\x99\x89\x9f\x6c\x8b\x27\x8f\x1d\x3d\x9a\x4a\xe6\x44\xbf\x1a\xb6\x5b\x50\x3d\x54\x3e\xe1\x76\x5a\xd5\x76\x5a\xbd\xec\xb4\xba\xda\x31\x9f\xc8\x21\xe6\x92\x99\xdc\x60\x22\x99\x1a\x8c\x67\x73\x89\xdc\x89\x6c\x09\x8d\xe7\x06\x13\xbd\xbd\xe9\x64\x3c\x75\x32\x75\x34\x97\xe5\x0e\xc9\xa4\x0f\x02\x7b\xf9\x44\x6f\x6f\x6a\x50\xc4\x4f\xa6\x06\xb3\xe9\x63\x47\xad\xdd\xef\x3d\x18\x47\xfd\x52\xd7\x2d\x90\xbd\xdb\xfc\x81\x1a\xb5\x8d\x32\x9b\x3a\x7a\xf0\x48\xf6\x90\xcd\x2d\xd9\x54\x4e\x8e\x24\xc5\x07\x6e\x3e\xb0\x56\x4f\x0e\x1c\xcb\x3a\xaa\x12\x18\x1f\x48\x27\x53\x47\xf1\x74\x73\xaa\x2f\xde\x3b\x98\x38\x92\x12\x9b\xb3\xb9\xc1\x5c\xe2\x65\xb1\x39\xab\x1f\x29\x96\x7b\x76\xed\x6a\x8b\xef\x28\x16\x2d\xf1\x2d\xb2\x6c\x8d\xb7\xc8\x72\x2b\xca\x16\x94\x6d\xf1\x08\xc1\x11\xd4\x8e\x10\xda\x12\x81\x16\x1e\xb7\xe0\xb9\x81\x6f\xa7\x6a\x5b\xb6\xe3\xf1\x76\x3c\xde\x6e\xce\x95\x9c\xa3\x78\x3a\x73\xb2\x8d\x30\x4c\x71\xf6\x58\xb2\xdf\x82\xe6\x4e\x64\x06\x52\x99\xf4\x41\x82\xf6\xec\xda\xb5\x2d\xde\x46\x26\xda\x60\x02\xe8\x16\xc0\x86\xdc\x02\x99\xca\x16\x94\x6d\xf1\x6d\xf4\x78\x1b\xb4\xb7\x41\x0b\x72\x0b\x1e\x53\xb9\x15\x65\x4b\xb1\x74\x76\xbc\x55\xd9\xf1\x56\x67\xc7\x5b\x9d\x11\x2a\x51\x69\xaa\x95\x7a\x00\x69\x2b\xca\x2d\x80\x5b\x5a\xd1\x01\x59\x6e\x8f\x6f\x45\xb5\xad\x98\x0f\xc8\x2d\xb2\xdc\x11\xdf\x52\x2c\x22\x54\x6c\x8b\x6f\xdd\x82\x5a\x90\x5b\x0c\xbc\x05\x46\x5a\xf0\x1c\x72\x0b\x64\x2a\xdb\xe2\x5b\x9a\xc9\x0b\x5b\x8c\x4c\x79\x77\xbf\x3f\xf6\x09\x25\x9b\x9e\xc0\xc6\x76\x96\x9d\x43\x38\x1d\xd7\xf0\x3f\x76\x1d\x50\xba\x6f\xe1\x3f\x7e\xe5\xb7\x4e\xf3\xd6\x1f\x62\x38\x3b\x9e\x88\x1a\x4d\x28\x59\x7c\xec\x0f\xa9\x34\xee\x8d\x36\xe1\x3b\x0c\x43\xdf\xc0\xaf\xbb\xf4\xdf\x38\xa7\xf0\x73\x36\xb7\xff\x99\x50\xdb\xef\x83\xfd\x1e\x8b\xfd\x80\xc2\xfe\x7b\x2e\xf6\xc7\xd1\x68\xb9\xf1\xe7\x5d\xec\xcf\x2a\xc6\x5f\xad\xb0\x7f\xda\xc5\x7e\x10\x3c\xa4\xaf\xcc\xf8\x5f\x73\xb1\x3f\x0f\xfb\x07\x2c\xf6\x6b\x14\xf6\xd7\xf8\xd4\xf6\x33\xf4\xe7\x1a\xa5\x7b\x38\x37\xfb\x3e\x9f\xda\x7e\xe3\x1f\x51\x39\x6e\xb1\xbf\x56\x61\xbf\xc5\xc5\x7e\xb3\x71\x24\x5a\xe7\x6d\xff\xf7\x5c\xec\xcf\xc2\xfe\xa8\xc5\xfe\x3a\x85\xfd\xaf\xb9\xf8\xbf\xb9\x89\xca\x4c\x8d\xb7\xfd\x47\x5d\xfc\x1f\xe9\xa6\xd2\xea\xff\x3a\x85\xfd\xcb\x2e\xeb\x6f\x72\x2b\x95\xf3\xc2\xdb\xfe\x25\x97\xf5\x37\x01\xfb\x0d\x16\xfb\xf7\x29\xec\x9f\x77\xb1\xdf\x87\xbf\x87\xe7\xf7\x26\xdc\xfe\x39\x17\xfb\xb3\xb0\xdf\x6c\xb1\x7f\xbf\xc2\xfe\x2f\x5c\xec\x2f\xe1\x3b\x49\x7e\x47\xcb\xed\x7f\xe8\x62\x7f\xa9\xdb\x6e\x67\x13\xdd\x66\x38\xec\xbf\xeb\x27\xfb\x3c\x07\x2f\xe3\xbf\xf3\xc6\xbf\x27\xe3\xf9\xf3\x5f\x5d\xf4\xd7\x47\x2a\xd3\x4f\x69\x6a\xfd\xc6\x1d\x95\xe9\xef\x70\xd1\xef\x68\xaf\x4c\xff\xdf\x7d\x6a\xfd\xd8\x13\x95\xe9\xff\xc0\x65\xfc\x99\x27\x2b\xd3\xff\x1f\x17\xfb\xa7\x9f\xaa\x4c\x7f\xde\xc5\xfe\xe4\xce\xca\xf4\xeb\x5c\xf4\x67\xbf\x5e\x99\x7e\x87\x50\xeb\x5f\xed\xa8\x4c\xff\x79\x97\xf9\x5b\x7a\xba\x32\xfd\xaf\xb8\xe8\x8b\x67\x2a\xd3\x7f\xc6\xc5\xff\xf5\xdf\x50\xd7\xe7\xfc\x63\xd0\xc5\xfe\x97\x5c\xf4\xb9\xdc\x0d\xfb\xec\xba\x52\x34\x40\x7f\x91\xe1\x7c\xfd\xff\x81\x4b\xfe\x5f\xc6\xfa\x37\xee\x3b\x8a\xeb\xff\xab\x8a\xf5\x9f\xf0\x39\x6d\xcb\x1f\xfe\xfb\x90\x31\xcb\xf9\xfc\x69\x8b\xbe\x71\x63\xf4\xbf\x01\x00\x00\xff\xff\xa9\x72\xb7\x19\x38\x5f\x00\x00")

func tcptracerEbpfOBytes() ([]byte, error) {
	return bindataRead(
		_tcptracerEbpfO,
		"tcptracer-ebpf.o",
	)
}

func tcptracerEbpfO() (*asset, error) {
	bytes, err := tcptracerEbpfOBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tcptracer-ebpf.o", size: 24376, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"tcptracer-ebpf.o": tcptracerEbpfO,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"tcptracer-ebpf.o": &bintree{tcptracerEbpfO, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

