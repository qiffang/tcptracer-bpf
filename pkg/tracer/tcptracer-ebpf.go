// Code generated by go-bindata.
// sources:
// ../dist/tcptracer-ebpf.o
// DO NOT EDIT!

package tracer

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _tcptracerEbpfO = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5c\x6f\x6c\x5b\xd7\x75\xbf\x8f\x14\x2d\x4a\xae\x2b\xa7\x1e\x13\x99\x59\x3a\xb9\x4d\x1a\x55\xc8\x1c\xc9\x96\x6d\x5a\x8d\x53\xc5\x9d\x13\x4d\x73\x22\xcd\xb1\x12\xc1\x45\x40\xb3\x34\x65\xd1\x92\x6d\x5a\xa4\x1d\x51\xf4\x56\x2d\x7f\x0a\x43\xed\x07\xa9\xc9\x00\x21\x33\x36\x51\x56\x1a\xb5\xeb\x06\x6f\x6b\x67\xaf\x0b\x26\xcf\x0b\x0a\x61\xe8\x00\x23\xcb\x36\x2d\x30\x06\x7d\xc8\x02\xad\x0b\x36\xa1\x35\x3c\x21\x33\xc2\x81\xf7\xfc\x2e\xdf\x7b\xe7\xdd\xf7\x48\xd9\x6e\xf7\x45\x04\xd2\xeb\xf3\xbb\x7f\xce\xbd\xe7\x9e\x7b\xee\xef\xde\x77\xd5\xaf\xef\xdb\xff\xa4\xcf\x30\x84\xfa\x19\xe2\x7f\x84\x29\x99\xbf\xa9\x67\xcd\x7f\xb7\xe3\x7f\xbf\x20\x0c\x31\x77\x2f\x61\xaf\x0a\x21\x3e\x2d\x84\xc8\xd5\x2e\x17\x8a\x72\x36\x96\x92\x78\x2e\xbc\x22\xe5\xb9\x69\x2a\x57\xed\x13\x62\xb9\x50\x28\xcc\x5d\x80\xec\x17\x62\xa5\x50\x28\xd4\x33\xa5\x97\xaa\xcc\x76\x7d\x45\x19\xf8\xef\x23\xcd\xde\xd7\xcd\xf4\x76\x48\x3d\x97\xd0\x4e\x2e\xdc\xee\xd0\xdb\xa1\xd1\xf3\xaa\x1c\xb3\x10\x21\xf1\x69\x99\x93\x5d\x47\x78\x25\xf5\xfc\x42\x88\xa3\xd5\x42\x34\x08\x21\x5e\x44\xda\x53\x1d\x30\x78\xfd\x76\x0f\xbd\x73\xd5\x24\x87\xaa\x3f\xa1\x71\x9d\x82\x6c\xdc\x22\x39\x8f\x71\xf9\x30\xae\xa6\x66\xb2\x6f\x1a\xe5\xfc\xbf\x2d\xfb\xd1\xe3\xbf\x29\xdb\xcb\x0e\x05\x25\xfe\xc2\x67\x6e\x90\x1d\x6b\x50\xef\x8d\xa5\x02\xa5\x8b\x48\x17\x90\x5e\x43\x3a\x8f\xf4\x0a\xd2\xcb\x48\x2f\x22\x9d\x45\x3a\x85\x74\x12\xe9\x38\xd2\x73\x48\x47\x91\x0e\x97\xfa\xed\x93\xfd\xee\x27\x3c\x9c\xa2\xfe\x9f\xda\x88\x79\xa2\x72\xd9\xa1\x7a\x8c\xaf\x91\xca\x35\x8d\x02\x6f\x00\xde\x00\x9c\xf4\x64\x53\x8d\x84\xd7\x92\xfe\xec\xe9\x66\x92\x0f\x51\xbf\xb2\x99\x08\xd9\x6f\x98\xbc\x35\x37\x86\xfe\x77\x52\xff\xb3\xc3\x1d\x94\x3f\xd4\x8d\xf6\x31\xde\xb1\x8b\x36\x3b\xc4\x86\x32\x32\x3f\xde\x74\x1d\xf2\x30\x64\xb2\x63\x72\xe8\xac\x94\x07\x9a\x3e\x80\xfc\xbb\x90\x3f\x44\xf9\x14\xca\x2f\x20\x7f\x14\xf9\x4b\xc8\x3f\x22\xe5\xa3\x3e\xf2\x9f\x58\xf6\xb0\x94\xbb\xbe\x4d\xf3\x16\xcb\xf6\x53\x9a\x1e\xa4\x72\x7e\x2a\xd7\xf5\x1a\xe6\xb5\x0d\xf3\xd7\x44\xf3\x97\x30\x62\xd2\xde\x21\xe3\x2c\xfc\xe8\xdb\xe4\xdf\x86\x21\xf1\x80\xf8\x33\xf2\x0b\xf8\xe3\x40\xf8\x80\xac\x57\xf7\x0d\x92\xe7\xf2\x94\x56\x1b\x42\x1c\x28\x14\x0a\x6a\xfe\xe6\xe2\xa6\xdf\x16\x97\x66\x32\x4f\xf5\x06\xc2\x34\x8e\x80\xf8\x43\x8c\xb3\xb7\x40\xe9\x2d\xca\x6f\x3a\x88\xf4\x26\xfa\xd9\x8f\xfc\x15\xf8\x01\xcd\xbb\x6a\xbf\x6e\x93\xb3\x1f\xbd\xe8\x47\x95\x45\x7f\xf6\x54\x43\xd9\x7a\xb7\xb4\xf5\x1a\xcb\xd6\x3b\x68\x19\xb7\x59\xaf\xb9\x6c\xbd\x9b\xda\x7a\xe4\x87\x75\xf7\x3a\xcb\xf7\xa3\x7c\x50\x63\xdf\xec\x29\xf2\xdb\xec\x05\xb2\x97\x4e\xdf\x8a\x66\x7c\xb1\x19\xd8\xbf\x93\xe2\x44\xec\x02\xcd\x43\xbc\xad\x95\xfc\x6f\x5a\xcd\x47\x84\xe4\xfc\x4d\xcc\x63\x1b\x95\x7f\x93\xe6\x25\x7e\xe8\x31\x99\x86\xaa\x06\x6c\x7e\xf7\x22\xd2\x90\x9f\xfc\xf2\x79\x9f\x10\x85\x82\x10\x21\x5f\x1f\xc9\x06\x64\x83\xfc\x5a\xc5\xaf\x5c\xb8\x9f\xc5\xe7\x61\x5b\x3c\xb0\x8e\x2b\x85\x71\x6d\xc4\xb8\x36\xb2\x78\xda\xcc\xf6\x8f\x7e\x4d\x7c\x0d\x88\x03\x32\x0d\x19\x0f\xcb\xf8\x18\x32\xf6\x48\xfb\x14\xd7\x41\x40\xe6\xd3\xba\x57\xfd\x89\x87\x0f\xa2\x3f\x64\xbf\xba\x27\xdd\xfd\xd0\x7b\xbe\x7a\x5d\xe7\xeb\xa0\x66\xbe\x8e\x0a\xd8\x15\x69\x71\x1c\x3f\x2b\x14\x0a\x6a\x1c\x2f\x6c\x6c\x29\xf5\xd3\x90\xfd\xbb\x82\xf5\xd6\xcc\xfa\x4f\xf3\x9c\xcd\x53\xfc\xd4\xf9\x9b\x75\x3d\xf0\xfe\xc7\xf2\xf0\x93\xf0\x75\xb4\xff\xa0\xad\xfd\x81\x30\xf9\x49\xdd\x3a\x67\xbb\x37\x3d\xe3\x84\xf2\xaf\x0f\xd0\xee\x66\xd6\x6f\xc4\x81\x7c\x83\x6b\xbf\x57\x3c\xfb\x0d\x7f\x0d\x2f\xa2\xfd\x0d\xac\xdf\x7d\xd4\xee\x73\xce\x76\xfb\x3c\xfb\xdd\x87\x7e\x7f\x88\x76\x69\x03\x8e\xe5\x0f\x42\xdf\x82\x83\x5f\x54\xe2\x97\xe5\x78\xcd\xff\x1b\x9f\xaa\xe7\x7c\xaa\x9b\xad\xd7\x0e\x87\xde\x6e\x2f\x5e\x03\x3f\x09\xad\x23\x57\xae\xa4\x5e\x71\x9d\x66\xfb\x84\xa3\xbc\x17\x6f\x33\xf9\xd3\xcf\x68\x1c\x25\xfe\xb4\x4c\xf2\x34\x1f\x47\x43\xc1\x5e\xae\x87\xf8\x93\xf1\x53\xe2\x4f\xa7\xc0\x9f\xb6\x2c\x09\x7b\x3d\xf0\xa5\x30\xf6\xdb\x30\xf8\x12\xd6\x63\x2e\x0c\xfe\x10\x06\x7f\x08\x83\x6f\x84\xc1\x97\xc2\xe0\x4b\x61\xf0\xa5\x30\xf8\x52\x18\x7c\x89\xc5\xc3\x52\xbc\xf4\x83\x3f\xb5\xf5\x62\xff\x3c\x0c\x5e\x44\xfc\x29\x9b\x06\x6f\x6a\x4b\xd9\xf6\xd7\x6c\x9a\xf6\xc7\x6c\x06\x3c\xa9\x13\x7a\xda\xc0\xb7\xd2\xcd\xc8\x8f\x20\x1f\xfd\x6a\x03\xbf\x4a\x23\x9e\x65\x3a\x90\x8f\x71\xb4\x81\x5f\xa5\xc1\x9b\xda\x66\x6d\xe3\x8e\x65\xc0\x97\x3a\x7f\x02\x19\x7c\xa9\x93\xec\x96\xcc\x80\x2f\x75\xbe\x07\x19\x7c\xa9\xf3\x9f\x51\x1e\x7c\xa9\x73\x1e\xf9\xe0\x4b\x9d\x0b\xc8\x07\x0f\xaa\x02\x5f\x3a\x4d\xfb\x50\xd7\x41\xcc\x53\x27\x78\x5b\x86\x78\x54\xec\x34\xf8\x55\x00\xbc\x69\x1f\xca\x1d\x52\xf3\x15\x41\x4a\xfb\x65\x8f\xef\xbb\xa2\xe8\xba\x73\x6f\xc1\xff\xaa\x85\xb8\x5c\x28\x14\xea\x76\xc2\x2f\x2d\xf1\xa3\xd9\xb2\x4f\x39\xf6\x83\x3c\xda\xbd\x8f\xfc\x29\x9b\x6f\x86\x8c\x76\x2c\xfe\xdd\xc0\xd6\x6f\xaf\x76\x3f\x7b\x9d\xc6\x11\xc4\x7e\x81\xb4\x27\xf8\x1a\xf3\x53\xe8\x81\x9f\xe7\xc2\xcb\x48\x97\x10\xcf\x3e\x46\xba\x02\x7c\x11\xf1\x0c\xfb\xc7\x29\x9a\x57\xce\x73\x8a\xfd\xda\xe8\x32\xfe\xa0\x6d\x1f\x74\xaf\x5f\xcf\xea\x37\xac\xa2\xbe\xb5\xde\xf2\x2a\xf5\x06\x59\xfd\x25\x6d\xfd\xf2\xbc\xf0\xe3\xdb\xe4\x85\x2b\xab\xe4\x85\x8b\x15\xf1\x8c\x45\x57\x9e\xa1\xe5\xbd\xdf\x85\x5f\xbc\x41\x71\x24\xfb\x1d\xf8\xc7\x31\x8a\x27\x73\x31\xaa\xdf\x35\x41\x69\xf6\x2d\xf8\xcd\x08\xe2\xc9\x2c\xce\x8f\x63\x14\x67\x92\x33\xf0\xa3\xce\x61\xf0\xca\x15\xf0\xca\x11\xc6\x3b\xcf\x12\x8f\x34\x1e\xa7\x7e\xfe\x1e\xf4\x94\xe2\xef\x97\x08\x7f\x82\x64\x93\x3f\x92\x7d\xe6\xb6\x70\x7c\x87\x94\x73\x9d\x41\xc4\xa3\x8d\x88\x7b\xf5\x2c\xce\xb7\xdb\xd6\x77\x36\xdf\x6d\x5b\xe7\x56\x7b\x45\x34\x7c\xb3\xa7\x86\x36\x30\x65\x97\xa3\x06\xd6\x1d\xd2\x7a\x49\x07\x4c\x9e\xf6\xc0\x16\xda\x88\x7a\xaa\x37\xdb\xc6\x59\xae\xde\x0b\x5b\x68\x02\x5f\x5c\x47\xf9\xf1\x63\x34\x2f\x6a\x7d\xc7\xc7\x1e\x44\xff\x69\xbc\xd7\x0d\xea\xdf\x40\xb8\x11\x78\x3d\xc3\x9b\x80\x6f\xc4\xba\x7e\xc4\xb1\x6f\xf3\x78\xd3\xac\x8d\x37\x18\xbf\xa5\x5e\x6f\x05\xf5\x56\xc3\x6f\x82\x92\x67\x44\xd8\xbc\x51\x9c\xcf\x1e\xa5\xb8\x9e\xed\x4f\x39\xfa\xb1\xe0\xc5\x07\x70\xdf\x11\xaa\x79\x80\xea\xc3\x9f\x7b\x8c\xfb\xe5\x3e\x3f\x77\x4a\x3f\x2f\xc5\x73\x41\xb5\x2c\x77\xaf\x6c\x87\xfb\xd1\x00\xf6\xb7\x4a\xef\x75\x42\xe0\x8b\x59\xe4\x87\x8c\x0d\x52\xff\xdd\x6f\x77\x8c\xda\x65\x76\xce\x1a\xb4\x6f\xcf\xbd\x4c\xb2\x2e\x4e\x5c\xd4\xc4\xa5\x64\x9e\xfa\xd3\x63\xfc\xb4\xe0\xb3\xf1\xf4\x8b\xf0\xa7\x65\xf4\x7b\x11\xe9\xad\x82\x75\x3c\x71\xec\x33\xd9\x89\xfa\x8a\xf5\xdb\xe2\xd4\x44\x43\xd9\x7a\xcb\xda\x7a\x8d\x65\xeb\x2d\xea\xe2\xf0\x44\x73\xd9\x7a\xb7\xb4\xf5\x10\xbf\xeb\x9d\xe5\xdb\xad\xf1\xfb\x65\x73\xfe\xa8\x9e\x8a\xdf\xed\xae\xf1\x7b\x49\x7b\xae\x87\xfd\x3b\x27\x11\x5f\x97\x11\x5f\xcf\x23\xfe\x62\x3e\x9a\x88\xa7\x25\x71\x9e\x1b\x08\x4f\x53\xf9\x37\x69\x5e\xe2\x87\x66\x28\x1e\x57\xfd\x95\x4c\x9d\xe7\xfa\xbf\x94\xb8\x79\xae\xff\x01\xc9\xa5\xf8\xfb\xe7\x54\xcf\x71\xef\x49\xeb\x27\x20\xb6\x09\xee\xcf\x93\x9e\xfe\x4c\xfc\xf1\x12\x78\x7c\x6e\x04\x7c\x7a\x04\xfc\x6c\xe4\xa2\x23\x5e\x2b\xbf\x91\x7c\xc2\x6f\xb7\xef\xab\xb2\x0f\xc5\xb8\x42\xf6\xcd\x5e\x88\x68\xc7\x99\x6b\x33\xef\x8b\x0d\xe9\xb7\xb4\x3f\xc4\xf2\x3f\x80\x1f\x1f\x84\x3c\x09\xb9\x1f\xf2\x79\xc8\x83\xb0\xf3\x14\x8b\xbf\xd8\x1f\xf3\xd3\x0c\x1f\x42\xfd\x19\xd4\xcf\x50\x3a\x32\x8c\xf4\x2c\xe2\xb6\x3a\x4f\x80\xe7\xe7\x15\x4f\xa5\x7d\x7b\x6e\x06\x76\xa8\x22\x3f\x53\xfb\x53\xbd\xcf\x6e\xdf\x4b\x01\xba\xa7\x2f\xda\x63\x73\x85\xf3\xe1\x97\xb6\x3b\x43\x7a\xef\x38\x7e\x1c\x2f\xd4\x6a\xf7\xe3\xc9\xdb\xe3\xa5\x13\xdd\xda\xfe\xe8\x78\x69\xbb\x8e\xdf\x79\xd4\xe7\xbc\x74\x72\x15\xf5\xcb\xf2\x52\x0f\xbd\x15\xf1\xd2\x0a\xe2\x9a\x96\x97\x56\x10\xd7\xb4\xbc\xd4\x23\xae\x2d\x56\x14\xd7\x56\xc9\x4b\xf3\xed\xb6\xf3\x63\xf6\x4d\xf8\x07\xce\x67\x5d\x21\x81\x76\xe1\x2f\x6d\xb4\x3e\xb2\x33\xe0\xa3\xea\x9c\x38\x0d\xff\x69\xc2\x39\x13\xf7\x42\x03\xe1\x77\x69\xdd\x4d\x81\x8f\xd6\xd2\xb9\x33\x14\xd8\x4c\xed\xb7\x52\xfb\xa1\xaa\xfb\x58\xdc\x0b\xb1\xb8\xb7\xc9\x25\xee\xad\x93\x71\xcf\xba\xbe\x2e\x7a\xae\xaf\x5a\xc7\x7e\xef\x56\x9e\xe2\x63\x15\x8b\x8f\x38\x6f\x8f\xe0\x3c\x3e\x32\xe9\x88\x8f\x93\xbf\xd0\xf8\x78\xde\x16\x1f\xb3\x58\xef\xd9\x69\xc4\xa9\x26\xfb\xfd\x85\x8a\x67\xd9\x69\xdc\x97\x34\xd9\xef\x3b\x92\xf9\x6b\x2c\x4e\x9e\x03\xfe\x2e\xc3\xc7\xa0\xff\x3d\xe8\xff\x16\xe2\xe6\x38\xd2\xd7\xa1\x6f\x96\xc5\xcf\xa9\xdb\x8e\x9f\xbd\x96\xf8\x19\x10\x7f\x47\xf5\xc1\x5f\x39\x5f\x35\xef\xcd\x9a\x4b\xb2\x5c\x27\x41\xf8\x6f\x72\x95\x3c\xb6\x74\xaf\xf5\x08\xd5\x07\x6f\xed\x31\x9a\xa4\x1f\xe5\x8e\x11\xff\x9f\xc3\x77\x9b\x4b\xd0\x93\x1b\x23\x3b\xc7\xc7\xc8\x4e\xea\x9c\x39\x87\xef\x45\xba\x75\x39\xaf\x3d\x0f\xab\xf5\x3c\xef\xba\x9e\xdf\xd3\xac\xe7\xdc\x18\xf9\xd3\xc0\xd8\x94\xc3\xcf\x23\xab\xe2\xb5\x75\xc4\xd7\xfb\x61\xbf\xef\x34\xb2\x73\x02\xf4\x84\xef\x54\xcf\xb3\xde\xfc\xd9\xc3\x6e\x53\xda\xfd\x0f\xfd\x61\xfd\xee\x31\x96\x18\x9f\x1e\x2f\xc3\xa7\x23\x76\x3e\xad\xbe\x93\x79\xf4\x67\xdc\xeb\x3b\x99\x47\x3d\x2d\x9f\x56\xf7\x21\x1e\xf5\xb4\x7c\x5a\xdd\x87\x78\xd4\xd3\xf2\x69\x75\x1f\xb2\xd9\x59\x3e\x62\xdd\x77\x5e\x33\xe7\xd3\xee\xa7\x91\x55\xf2\x69\xd8\x1f\xf7\x9a\x26\x9f\x9e\x61\x7c\x7a\x96\xf1\xe9\xef\x31\x3e\xfd\x7d\xf0\x69\x5a\xb0\x4e\x3e\x4d\x07\x62\x73\x5f\x21\xff\x53\xfb\x4a\x8f\x71\x95\xfa\x6b\xf1\xdf\xa2\x5f\x05\xc4\x0f\xef\x8a\x1f\xf6\x18\x33\x8c\x87\xa9\xfb\xce\xf1\xdb\xe3\x61\xea\x9e\x8d\xf5\x47\xc7\xc3\x22\x5e\xf7\x74\x9a\xfa\x9c\x87\x8d\xaf\xa2\x7e\xc5\xf7\x83\x1a\xbd\xab\xba\x1f\xf4\xd0\xeb\x79\x3f\xe8\x51\xcf\xf3\x7e\x50\xb3\x1e\x16\x2b\x5a\x0f\xab\xe4\x61\x33\xf0\x0b\xf5\x3e\xe2\x82\xfa\x1e\x30\x8b\xfd\x1b\x7e\xd2\x84\xfd\x3e\x0f\xfe\x85\xef\x1e\xc9\x29\xf8\x4d\x2d\xed\xf7\x49\x7c\x47\x1e\x38\x74\x95\xd6\xcb\x5b\xe0\x5f\x23\xef\x50\x7c\xdc\x45\xfd\xe9\x7a\x8a\xd2\x50\xf5\x57\xa9\x9f\xb8\x1f\xef\x7a\x58\xe1\xbd\x32\x7d\x1e\xb7\x66\x21\x41\x1f\xf2\x9e\x0f\x40\x0e\xd0\xc5\x7f\x4f\x55\x40\xa6\x7c\xfd\xd5\xcb\xe5\x67\xb9\xa7\xfb\x0a\xdd\x6b\xf5\xf8\x72\x54\xbe\xec\xfd\xdc\x99\x92\x7d\x03\x96\xfb\x2a\x7e\x0f\x9f\x1b\x6b\x2f\xed\x4f\x7e\xb9\x5e\x3a\x60\x27\xe2\x03\xaa\xfd\x78\x78\x3f\xdb\xc7\xf0\x5d\x47\xf1\xab\x69\x8a\x27\x71\x7c\xe7\x89\x4d\xbf\x0d\xf9\x08\xe2\x12\xd9\xf7\x3a\xee\x2b\x07\xf0\xbd\x27\x39\x7d\x95\xe1\xc7\x50\xff\x1d\xd4\x1f\xc4\x3a\x4e\x21\xcd\x38\x78\x63\xb7\xe6\x1e\x34\x99\x3f\x86\xf6\x71\xfe\xbd\x40\xfd\x88\xcd\x1c\x46\xdc\x23\x42\x34\x47\xd7\xb2\xa5\xef\x2c\x2f\x22\x0d\x05\x3e\x43\xf9\x0f\x09\x36\x6f\x75\x84\x87\x38\xfe\x29\xc2\x2d\x3c\x2d\xe2\xc1\xd3\xd4\x39\x84\x9f\x77\xcb\xf5\x3b\x8e\xef\x5d\xf1\xb6\xd7\x99\xdd\x26\x19\xef\x7c\x03\xbc\x53\xd9\xef\xbc\x83\x6f\x8c\x7b\xf2\xfd\x1b\x9f\xf0\xf2\x53\x9e\xe5\xff\xeb\x93\x5f\xae\xbf\x4d\x31\x7f\x9b\x61\xfe\x36\xeb\xe2\x6f\xdf\x73\xf1\xb7\xef\xdf\x91\xbf\xdd\xe9\xbc\x07\xc4\x8f\x7f\xa9\xf6\xcb\x4e\xab\x78\x89\x73\x47\x1b\xde\xb9\xa9\xef\xb4\xd3\x88\x97\x17\x70\x3e\xc2\xf7\x57\x75\x4e\x72\xae\xe7\x51\x97\xf5\xfc\x12\x5b\xcf\xaf\xc0\xae\xe7\x90\x7e\xeb\x17\x66\xdf\x5e\x69\xcb\x7f\x24\x3b\x94\xde\x21\x2a\x7e\x00\xbb\x6d\xb6\xbf\x1f\x50\xdf\xff\xf9\x39\x28\x54\x43\x1f\x7a\xac\xeb\x41\xf7\x5e\xc1\x79\x0e\x6a\x93\xa9\x79\x0e\x8a\xd0\x39\x48\xcd\x23\xda\x1f\x18\xc3\x7b\x93\xb1\x1b\xe0\x2b\xe5\xf7\xdf\x1b\xab\xd8\xb7\xab\xf1\x3d\xbe\xdc\xbb\xaf\xdc\x18\xf8\xe1\x18\xde\x6f\x54\x70\x0e\xd3\xf3\x0e\xb5\x9f\x2f\xb9\xee\xe7\x3a\xfe\x9e\x1b\x1b\x87\x1d\xba\x2b\x8e\x57\x95\x7d\xb7\x40\xbb\xe1\x3b\x6d\xf7\x37\x6f\xfb\xdc\x25\xfd\x3a\x88\xef\x4b\x0e\xde\xdb\x0d\xde\xfb\x1f\x05\x9f\x2d\x0e\xe0\x9d\x28\xee\x9b\xf8\xbe\xcf\xef\x27\xe3\x38\xbf\x9a\xe7\x35\xef\x77\x1e\x31\xf0\xa3\x78\x13\xd6\x27\xde\x87\xc4\xc3\xf4\x0e\xc2\xfc\xbe\x37\x03\x7f\x28\x7f\x9e\xbb\xec\x71\x9e\xd3\xf1\xc2\xb7\xad\xef\xa4\x18\x2f\x34\xdf\x61\x81\x9f\xe5\x6f\xb0\x7d\xee\xaa\x23\x7e\xcc\x6a\xe2\x47\x0c\xf7\xd1\x21\x63\x1e\xfb\xe2\xdb\x5a\x7b\x86\x8c\x77\xa0\x87\xf4\x99\xf7\x68\x7f\x0b\xfc\x2a\xc3\xff\x86\xf4\x5b\xe2\x53\xd1\x9f\xd4\xfb\x41\x1e\x9f\xd4\xf7\x93\x80\xf8\xc6\x5d\xf6\x9b\x3f\x91\xe7\xa5\xbb\xe7\x37\xb7\xf7\x6e\xc8\xf4\xa7\xeb\xf0\x23\x75\x0e\xfb\xc0\xc5\x9f\xca\x9f\x8b\xf4\xf7\x3c\x95\x9f\x8b\xae\xad\xb2\x3e\x3f\x0f\x5e\xf6\xa8\xaf\xfc\xb9\xba\xc6\x79\x0e\xbc\xe2\x71\xde\x31\xfd\x7a\xc1\xc5\xaf\xdf\xaf\xc8\xaf\xcd\x7b\x4a\x9a\x8f\x1e\x1f\xbe\x7f\x63\x3c\xe5\xcf\x15\x35\xf0\x4b\x9a\xe7\xec\x0c\xcd\x73\x4f\x15\x11\x63\x37\x7e\x4c\x51\xc0\x72\xde\x08\x3c\x5a\x1a\x1f\xf9\x1f\x78\xc6\x5b\xf0\xb3\x91\xde\x92\x7f\xf9\xa4\x3f\x80\xcf\x1e\x3b\xc2\x78\x8a\xfd\x1e\xd6\xe4\x0d\xc3\x90\x71\x8f\xda\x74\x16\x7c\x83\xec\x67\xf2\x8f\xf7\x21\xbf\xc4\xfc\xb1\x3c\xef\xe8\xd7\xc6\x8d\x61\xc4\x8d\x27\x10\x37\xce\xba\xc4\x8d\x3d\x98\xc7\x51\x16\x1f\xda\x80\xbf\xc4\xf0\x5d\x8e\xb8\xd1\xed\x11\x37\xe6\xf0\x77\x13\x4e\xde\xb8\x55\x96\xef\xc2\x7b\x93\x90\x41\xef\x26\xba\xbe\x02\xd9\xdf\x04\xfd\x0b\x4c\xff\xc3\xc0\xdf\x67\xf8\x83\xb7\x15\xcf\x4c\xbe\xf5\x11\xd5\x77\xbc\x07\x25\xde\xa5\xde\x0b\xc7\x6b\xc1\x73\x4a\xef\x43\x97\x1c\xfb\xf2\x0d\xcf\x7d\xb9\x56\xca\xb1\xd2\xbe\x4c\x44\x8a\xf3\x33\xeb\xbb\x8f\xa5\xbb\xf2\xae\xd5\xf9\x8e\xb5\x32\x1e\xf8\xa0\xb6\x7f\x6e\xe7\x29\xce\x3f\xcd\x75\x45\xeb\xdc\x79\x2e\xb8\x52\x5a\x47\x55\x96\x7d\xdc\x5c\x57\xf6\xfb\x32\x75\x3f\xc6\xdf\x87\x9a\xef\xa9\xf1\x0e\x12\xbc\x55\xdd\xf7\xea\xe2\xaa\x1b\x4f\xbf\x7c\x1b\xe7\x20\x87\xfd\x3b\x90\x7e\x11\xe9\x7d\xf6\xf9\x50\x7c\x3d\x39\x41\xef\x4a\x7b\x8c\x47\xe9\xdd\x29\xbe\xc7\x97\xec\x88\x79\x30\xed\xa1\xce\x01\x7a\xbb\x98\xfb\xd4\xf5\x82\xdd\xfe\x64\x57\xfe\x3d\x2d\x37\x02\xfb\x4d\x54\xd9\xec\x15\x9b\x50\xf6\x23\x7f\x4f\x4e\x7c\x5a\xca\xea\x9e\x32\x39\x41\xf7\x06\x66\xdc\xff\xb8\x34\x6f\x01\x97\xf7\xda\xf3\x9e\xeb\x82\x3e\x9c\x29\xbe\x5a\x87\xf7\x5c\xb9\x8d\xb0\x9f\xe6\x3e\xce\x6d\xfe\xe6\xe5\xba\xbf\x52\x36\x1e\x45\x3c\xe6\xaf\xca\xf2\x9f\xa8\x12\x6b\x3f\xfc\xd6\xec\xa2\xff\xad\xd9\x45\xff\x33\x10\xc7\xe4\x76\xb0\x66\x97\xd2\x6f\xcd\x2e\xfa\x9f\x81\x78\x2e\x79\xfa\x9a\x5d\x4a\xbf\xa2\x5d\x1a\xd7\xec\xe2\xf8\xa9\x75\xb4\x16\x77\xed\x3f\x63\x6d\x3f\xd2\xfe\x94\xbf\x9c\xc3\xbf\xd7\x7e\xf4\x7b\xaa\x7b\xbf\xf8\xa4\x50\x28\x80\x6e\x0b\x63\xe4\x80\x08\x9e\x5d\x6f\xdc\x6f\x8d\xc7\x42\x88\x61\xa4\x45\xec\x11\xfc\x7b\x21\x68\x62\xed\x9a\x72\xf8\x53\x31\xd1\x6f\x29\x87\xe7\x3a\xe2\x4a\xad\x89\x9d\x55\x9d\xd9\x60\x62\xe3\x80\x52\x35\x26\x06\xaa\x2f\xe6\x2d\x3a\x2e\xe3\xdf\xa3\x98\xd4\x5f\x11\x42\xfc\x44\xe9\xa8\x60\xa2\x87\xe5\x1a\x09\x88\xc6\x75\x76\x7c\x3d\xf0\x60\xb5\x1d\x7f\xd9\x4f\xf8\x15\x86\xef\x03\xde\xee\xb7\xe3\x7f\xef\x23\xbc\x9f\x95\xff\x63\xe0\x0d\x41\x3b\x7e\x1a\x78\x07\xeb\x4f\x3f\xfa\x33\xcc\xca\x77\x00\x3f\xc7\xf0\x2f\x02\x9f\x64\xfd\xf9\x26\xda\xbf\xcc\xca\xbf\x00\x7c\x9e\xe1\x39\x59\xbf\x46\x74\xb0\xfe\x5f\xf5\x11\x3e\xca\xf0\x0b\xc0\xeb\x59\x3b\xc7\x81\x77\x30\xfc\x5c\x15\xe1\xbd\x0c\x7f\x05\xe5\x67\x59\xff\xe9\x99\xcf\x7a\xb1\xc4\xf0\x3d\x7e\xc2\x87\x03\x76\xfc\x0f\x7c\x84\xf7\x32\x5f\x48\x00\x9f\x65\xe5\xe3\x68\x67\x81\xf5\xe7\xd7\x81\x07\x6b\xec\xf8\x47\xc0\x67\xed\xb0\xb8\x17\x38\x0f\x36\x7f\x01\xbd\xfd\x0c\x4f\xc9\x71\x6d\x10\xbd\x2c\x66\x77\x03\xaf\xaf\xb5\xe3\x2d\xc0\xfb\x19\x9e\xf6\x13\xbe\xc0\xda\xdf\x01\x3c\xc5\xda\x3f\x8c\x76\x22\xac\x9d\xff\x45\xf9\x79\x36\xbf\x0f\x01\x5f\x61\x78\x2f\xda\x99\x67\xf6\x69\x07\x3e\xbb\xde\x8e\x6f\x01\x3e\xc9\xf0\x9f\xbb\xf4\xff\xdf\x55\xff\x19\x7e\x10\xf8\x28\xc3\xeb\x80\x2f\x31\x7c\x40\xe2\x75\x62\x92\xd9\xe1\x35\x1f\xe1\x0d\x6c\x5c\xa3\x55\x84\xf3\xf5\xfb\x55\xb4\xc3\xd7\xcb\x03\xc0\xaf\x31\xfc\x47\x68\x7f\x91\xe1\x4f\xa3\xfc\x0a\xeb\xe7\xef\xa0\x7c\x37\xbb\xc7\x78\x0e\xf8\x61\x86\x87\x65\x3f\xef\x29\xc5\x43\xf5\xdb\x2d\xf1\x4d\x0e\xbb\x6d\x92\x78\x48\x74\x33\xfc\xdf\xfc\x84\x5f\xd4\xc4\x4e\xbf\xf0\x3b\x41\x89\x07\x5c\xf0\x6a\x17\xbc\xc6\x05\x5f\xef\x82\x6f\x70\xc1\xeb\x5c\xf0\x7b\x5c\xf0\x4d\x2e\x78\xc8\x81\x3d\x2a\xef\x99\xb6\x38\xf0\xa7\xe5\xbd\xd7\xe7\x1c\xf8\x8c\xfc\x0e\x13\x76\xe0\xff\x29\xdb\xb9\xdf\x81\x3f\x2e\xdb\xf9\x35\x07\xbe\x4f\xee\x6b\x9f\x75\xe0\x83\xb2\xbc\x73\x5c\x41\xd9\xbe\xd3\x3e\x7f\x2a\xcb\x3b\xc7\xf5\xaf\x12\x77\xda\xf9\x9f\xa4\x5e\xe7\xfc\x1e\x97\xb8\x73\x1e\x9f\x93\xed\x38\xed\x59\x2d\xcb\x3b\xe7\xe5\xaf\x25\xee\xf4\x93\x67\x25\xee\xf4\x87\x71\x69\xcf\xfb\x1c\xf8\xbf\xc8\xf1\x6e\x76\xe0\xff\x20\xcb\xd7\x3b\xf0\x46\xd9\xcf\x06\x07\xfe\x23\x59\xfe\x57\x1d\xb8\x21\xf1\x07\x1c\x78\x87\xca\x17\x42\xfc\x86\xa0\x3b\x44\xab\x9c\x62\xf2\x45\x8b\xdc\x53\x1c\xe3\x3a\x53\x7e\x4e\x08\x31\x1b\xb4\xe7\x5b\xdb\xdf\xc7\xda\xdf\xc7\xda\x2f\xca\x53\xac\xfd\x71\xbf\x5d\x16\x41\xbb\xbe\x88\x45\x7e\x9e\xe9\x2b\x96\xbf\xc6\xe4\x46\xc3\x2e\xaf\xf8\xed\xed\xf5\x06\x4c\xf9\x40\x71\x1f\x0f\xd8\xf3\x97\x98\xbe\xfa\x1a\xbb\x3c\x59\x6b\xca\x45\x1f\xe8\x66\xfa\xdb\x99\xfe\x59\x26\x8f\xd6\xd8\xf5\xd7\xd7\xda\xf5\x77\xd4\xda\xf5\x0d\xaf\xb7\x97\x5f\xf8\x94\x5d\x7f\x2f\xd3\x3f\xcf\xf4\x35\xf8\xec\xf2\x70\x95\xbd\xbd\x8b\x41\xbb\xdc\x51\x63\x6f\xdf\x6a\xef\x27\x8b\xe3\xb7\xc8\x4f\xe1\x8c\x6f\x95\x0f\x33\xb9\xc3\x60\xe3\xb5\xc8\x45\x9e\x7d\x8e\xc9\xca\xb3\x6b\xe1\x4b\xcd\x16\x79\x37\x7c\x54\xc9\x6d\x96\xf1\x17\xe5\x2f\x15\xe3\x8d\x45\x7e\xac\x68\x6f\x8b\xbc\x47\x08\xfc\xbf\x24\x90\xfc\x78\x71\x7e\x2c\xf2\x97\x85\x10\x6f\x5b\xe4\x76\x8b\x7f\x15\x65\xf9\x32\x69\x6b\x26\x31\x9c\x11\x03\x43\x89\x4c\x6a\xe8\xe4\xd7\x12\xd1\x68\xf2\x44\x22\x13\x8d\xa7\x07\xa2\xb1\x78\x3c\x91\xca\x88\xad\x43\x89\xc1\x52\xf6\xa3\x3c\xf7\x78\x2c\x95\x7e\xb4\xef\x48\xf2\x44\x3a\x13\x1b\x1c\x8c\x0e\x25\x6c\x6d\x65\xe2\xa9\xe8\x99\x9d\xd1\xf8\xc9\x13\x27\x12\xf1\x8c\x18\xd0\xc3\x76\x0d\xba\x4c\x6d\x0e\xd7\xd3\xaa\xd7\xd3\xea\xa5\xa7\xd5\x55\x8f\x99\x23\x87\x98\x89\xa7\x32\x43\xb1\x78\x62\x28\x9a\xce\xc4\x32\xa7\xd3\x7c\xe0\xa9\xe4\x91\xb4\x88\x9e\x49\x0c\xa5\x93\x27\x4f\x58\xbb\xd6\x77\x24\x8a\x32\xa5\x6e\x59\x20\x7b\x97\x78\x86\x03\xb5\x0e\x2c\x9d\x38\x71\xe4\x78\xfa\x28\xef\xb8\x82\xed\x45\x33\xb2\xdb\x09\x67\x61\x95\x61\x2d\x1e\x1f\x3c\x99\x76\x14\x25\x30\x3a\x98\x8c\x27\x4e\x20\x77\x6b\xa2\x3f\xda\x37\x14\x3b\x9e\x10\x5b\xd3\x99\xa1\x4c\xec\x6b\x62\x6b\x3a\x7b\xbc\x98\xee\xdf\xbb\x77\x67\x74\x77\x31\x69\x89\x6e\x93\x69\x6b\xb4\x45\xa6\xdb\x91\xb6\x20\xdd\x19\x8d\x10\x1c\x41\xe9\x08\xa1\x2d\x11\xd4\x42\x76\x0b\xf2\x15\xbe\x8b\x8a\x6d\xdb\x85\xec\x5d\xc8\xde\x55\x9a\xae\x68\xe2\x4c\xe2\x44\x26\x9a\x4c\x9d\xd9\x49\x18\xe6\x33\x7d\x32\x3e\x60\x41\x33\xa7\x53\x83\x89\x54\xf2\x08\x41\xfb\xf7\xee\xdd\x11\xdd\x49\x2a\x76\x42\x05\xd0\x6d\x80\x95\xdc\x02\x99\xd2\x16\xa4\x3b\xa3\x3b\x28\x7b\x07\x6a\xef\x40\x2d\xc8\x2d\xc8\xa6\x74\x3b\xd2\x96\x62\xea\xec\x78\xab\xb6\xe3\xad\xce\x8e\xb7\x9a\x95\x33\x43\xb1\xbe\xbe\x64\x9c\xd0\xfd\x7b\xf7\xee\x8e\xb6\x92\xc6\x56\xea\x08\xa4\xed\x48\xb7\x01\x6e\x69\x45\x3f\x50\x69\x7b\x31\xd9\x45\xc9\x8e\xe8\xf6\xed\x98\x1d\xc8\x2d\x32\x8d\x44\xb7\x21\x7b\x1b\xb2\x21\xb7\x28\xbc\x05\x4a\x5a\x90\x0f\xb9\x05\x32\xa5\x3b\xa3\xdb\x9a\xc9\x18\xdb\x54\x74\xbc\xfd\xdf\x93\x3e\xa1\x65\xc7\x1b\xbb\x28\x1d\x67\xe7\x0d\x4e\xaf\x0d\xfc\xc7\x8e\xfd\xa5\x7b\x15\xfe\xe3\x57\x7b\x1b\x0c\xef\xfa\xc3\x0c\x67\xc7\x10\x51\x63\x08\x2d\x2b\xbf\xf2\x5b\x94\xaa\xfb\xa1\x87\xf0\xbd\x5f\xd5\x57\xf8\xb2\x4b\xff\xd5\x79\x84\x9f\xa7\xb9\xfe\x8f\x84\x5e\xff\x35\xe8\xef\xb6\xe8\x0f\x68\xf4\xbf\xe9\xa2\x7f\x1c\x8d\x96\x1b\x7f\xde\x45\x7f\xc3\x7e\xbb\x9e\x87\xc0\x71\xb9\xfe\x73\x2e\xfa\x83\xe0\x21\xfd\x65\xc6\xff\x8a\x8b\xfe\x66\xe8\x3f\x6c\xd1\x5f\xa3\xd1\xff\x73\x97\xf9\x4f\xd1\x9f\x05\x94\xee\xdb\xdc\xf4\xff\xb7\xcb\xfc\x8f\x43\xff\xb8\x45\xff\x7a\x8d\xfe\xcf\xfa\xf4\xfa\x9b\x15\x95\xde\xe0\xad\x3f\xec\x73\xb1\xff\xd3\x94\x8e\x5a\xf4\x6f\xd0\xe8\xff\x82\x8b\xfd\x9b\x9b\x28\x4d\xd5\x78\xeb\xff\x9c\x8b\xfd\xa7\xa0\xdf\x6a\xff\x3a\x8d\xfe\xf3\x2e\xf6\x9f\xda\x4e\xe9\xbc\xf0\xd6\x3f\xe9\x62\x7f\xf1\x0c\x25\x0d\x16\xfd\xf7\x68\xf4\xbf\xec\xa2\xbf\x1f\x7f\x77\xcd\xef\x47\xb8\xfe\xaf\xbb\xe8\x6f\x80\xfe\x66\x8b\xfe\x4d\x1a\xfd\x3f\x76\xd1\xbf\x84\xf7\x78\xfc\x2e\x96\xeb\xbf\xea\xa2\xbf\x5b\x33\xfe\x90\x46\xff\x37\xfd\xa4\x9f\xc7\xe0\x59\xfc\xfd\x13\x7f\x7f\xc2\xe3\xe7\xbc\x4b\xfd\x2b\x91\xca\xea\xbf\xeb\xd3\xd7\x5f\xd8\x5d\x59\xfd\x3f\x72\xd1\xbf\xdc\x56\x59\xfd\x0f\x5d\xf4\x07\x1f\xab\xac\xfe\x0f\x5d\xf4\x37\xec\xa9\xac\xfe\x2d\x17\xfd\x91\xc7\x2b\xab\xdf\x2e\xf4\xf5\xbb\xbf\x5c\x59\xfd\xdd\x86\xbe\x7e\x7f\x7b\x65\xf5\x3f\xef\x52\x7f\xf4\x89\xca\xea\x37\xbb\x8c\x7f\x72\xaf\xbe\x3c\xdf\xff\x9f\x71\xd1\x7f\xde\xa5\x3e\x97\x1f\x83\x7e\x76\x2d\x28\xa6\x50\x7f\x91\xe1\x7c\xfd\x45\x5c\xe2\x6f\x0a\xeb\x4f\xdd\x37\x14\xd7\xdf\xe7\x35\xeb\xef\x19\x9f\x53\x77\xf1\x37\x8a\x77\x9d\xed\x96\xf3\xf1\x5e\x4b\x7d\x75\x63\xf3\x7f\x01\x00\x00\xff\xff\x7a\xb2\x36\xde\x20\x5d\x00\x00")

func tcptracerEbpfOBytes() ([]byte, error) {
	return bindataRead(
		_tcptracerEbpfO,
		"tcptracer-ebpf.o",
	)
}

func tcptracerEbpfO() (*asset, error) {
	bytes, err := tcptracerEbpfOBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tcptracer-ebpf.o", size: 23840, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"tcptracer-ebpf.o": tcptracerEbpfO,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"tcptracer-ebpf.o": &bintree{tcptracerEbpfO, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

